@model wwwplatform.Models.ViewModels.SelectFileOptions

@{
    var fieldName = Model.name;
    var singleSelect = Model.singleSelect ? "true" : "false";
}
@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
        @<div id="SelectFile_@fieldName" class="text-left h5 modal fade" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Select or Upload File</h4>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" data-role="file-url" />
                        <input type="hidden" data-role="file-id" />
                        <div class="file-table">
                            <table class="table table-striped clickable file-list">
                                <thead>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <div class="js-uploader">
                            <iframe id="iframe_@fieldName" name="iframe_@fieldName" class="hidden"></iframe>
                            <form action="~/WebFiles/Create" method="post" enctype="multipart/form-data" target="iframe_@fieldName">
                                <a class="btn btn-primary fake-file" href="#">Select a file on your computer</a>
                                @SimpleAntiForgeryToken()
                                <input type="file" name="file" class="file-input" tabindex="-1" multiple="" />
                            </form>
                            <div class="spinner"></div>
                            <div class="progress"><div class="progress-bar progress-success"></div></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal" data-role="submit">OK</button>
                    </div>
                </div>
            </div>
        </div>
        );
    Html.AddScriptBlock(
        @<script type="text/javascript">
            $(function () {
                var selectFileName = '@fieldName';
                $(window).bind('selectfile.show', function (event, options) {
                    var callback = options.callback;
                    var eventName = options.eventName;
                    var meta = options.meta;
                    var singleSelect = @singleSelect;
                    var value = options.value;
                    var modal = $('#SelectFile_' + selectFileName);
                    $('body').append(modal);
                    var renderDate = function (data, type, full, meta) {
                        if (type === 'display') {
                            return (new Date(full.DisplayDate || data)).toLocaleString().replace(',', '');
                        }
                        return full.DisplayDate || data;
                    };
                    var renderCheckbox = function (data, type) {
                        if (type === 'display') {
                            return '<i class="fa fa-' + (data ? 'check-' : '') + 'square-o fa-lg"></i>';
                        }
                        return data;
                    };
                    var renderIcon = function (data, type) {
                        if (type === 'display') {
                            return '<i class="fa ' + data + ' fa-lg"></i>';
                        }
                        return data;
                    };
                    var datatable = null;
                    var cancelled = true;
                    modal.modal('show')
                        .one('shown.bs.modal', function (e) {
                            // display user's file list
                            $('[data-role="file-id"]', modal).val('');
                            $('[data-role="file-url"]', modal).val('');
                            @*var filedropzone = new Dropzone('#SelectFile_' + selectFileName, {
                                addRemoveLinks: true,
                                maxFiles: 1,
                                url: '/WebFiles/Create'
                            });
                            filedropzone.on('sending', function (file, xhr, formData) {
                                formData['__RequestVerificationToken'] = $('input[name="__RequestVerificationToken"]').val();
                            });
                            filedropzone.on('success', function (response) {
                                debugger;
                            });*@

                            $.getJSON('@Url.Action("Index", "WebFiles")', function (files) {
                                // files = [{Id:, Name:, Preview:, Location:, UpdatedAt:}]
                                files.every(function (f) { return !(f.Selected = false); });
                                datatable = $('table.file-list', modal).DataTable({
                                    columnDefs: [
                                        { targets: 0, title: '', data: 'Selected', orderable: false, render: renderCheckbox, width: '4px', className: 'row-select' },
                                        { targets: 1, title: '', data: 'Icon', orderable: false, render: renderIcon, width: '4px' },
                                        { targets: 2, title: 'Name', data: 'Name' },
                                        { targets: 3, title: 'Date', data: 'UpdatedAt', render: renderDate }
                                    ],
                                    data: files,
                                    info: false,
                                    language: {
                                        emptyTable: 'Uploaded files will be listed here.'
                                    },
                                    order: [[3, 'desc']],
                                    paging: files.length > 10,
                                    retrieve: true
                                });
                                var lastClickedRow = null;
                                $('table.file-list', modal).on('click', 'tbody>tr', function (event) {
                                    var row = datatable.row(this);
                                    var data = row.data();
                                    if (!singleSelect) {
                                        var selected = !data.Selected;
                                        var rowIndex = datatable.rows().nodes().indexOf(this);
                                        var from = rowIndex;
                                        var to = rowIndex;
                                        if (lastClickedRow != null && event.shiftKey) {
                                            event.preventDefault();
                                            event.stopPropagation();
                                            from = Math.min(rowIndex, lastClickedRow);
                                            to = Math.max(rowIndex, lastClickedRow);
                                        }
                                        for (var i = from; i <= to; i++) {
                                            row = datatable.row(datatable.rows().nodes()[i]);
                                            row.data().Selected = selected;
                                            if (selected) {
                                                $(row.node()).addClass('selected');
                                            } else {
                                                $(row.node()).removeClass('selected');
                                            }
                                            row.invalidate();
                                        }
                                        lastClickedRow = rowIndex;
                                    } else {
                                        var id = data.Id;
                                        $('[data-role="file-id"]', modal).val(id);
                                        $('[data-role="file-url"]', modal).val('/WebFiles/Details/' + id);
                                        cancelled = false;
                                        modal.modal('hide');
                                    }
                                });
                            });
                            $('[data-role=submit]', modal).click(function(event) {
                                cancelled = false;
                            });
                            $('[type="file"]', modal).change(function (event) {
                                $('.js-uploader').addClass('uploading');
                                var $form = $(event.target).closest('form');
                                if (!submitViaAjax($form[0])) {
                                    $form.submit();
                                }

                                function progressHandler(event) {
                                    var $p = $('.js-uploader .progress-bar');
                                    if (event.lengthComputable) {
                                        var percent = Math.round(event.loaded * 100 / event.total);
                                        $p.text(percent + '%');
                                        $p.css({ width: percent + '%' });
                                    } else {
                                        $p.text('Uploading ...');
                                    }
                                }

                                function submitViaAjax(form) {
                                    if (FormData && XMLHttpRequest) {
                                        var request = new XMLHttpRequest();
                                        if (request.upload && request.open && request.send) {
                                            request.upload.addEventListener('progress', progressHandler, false);
                                            request.open("POST", form.action);
                                            request.setRequestHeader("Accept", "application/json");
                                            request.send(new FormData(form));
                                            request.onreadystatechange = function () {
                                                if (request.readyState == 4) {
                                                    var response = JSON.parse(request.responseText);
                                                    if (request.status < 300) {
                                                        $(window).trigger('newfile.upload', response);
                                                    } else {
                                                        $(window).trigger('error.upload', response);
                                                    }
                                                }
                                            };
                                            return true;
                                        }
                                    }
                                }
                            });
                        })
                        .on('hidden.bs.modal', function (e) {
                            // file selected?
                            if (cancelled) {
                                $('form', modal)[0].reset();
                            } else {
                                var id = $('[data-role="file-id"]', modal).val();
                                var url = $('[data-role="file-url"]', modal).val();
                                if (datatable) {
                                    var rows = datatable.rows('.selected');
                                    if (rows.indexes().length) {
                                        id = [];
                                        rows.data().each(function(d) {
                                            id.push(d.Id); 
                                            return true;
                                        });
                                        id = JSON.stringify(id);
                                    }
                                }
                            
                                if (url || id) {
                                    var result = { id: id, url: url, alt: '' };
                                    callback && callback(url, result);
                                    eventName && $(window).trigger(eventName, result);
                                }
                            }
                        });

                    $(window).bind('newfile.upload', function (event, data) {
                        if (data.status) {
                            var file = data.files[0];
                            var ids = data.files.map(function (f) { return f.Id; });
                            $('[data-role="file-id"]', modal).val(JSON.stringify(ids));
                            $('[data-role="file-url"]', modal).val(file && '/Download/' + file.Id + '/' + file.Name);
                            modal.modal('hide');
                        } else if (data.message) {
                            bootbox.alert(data.message);
                        }
                        $('.js-uploader').removeClass('uploading');
                    });
                    $(window).bind('error.upload', function (event, data) {
                        modal.modal('hide');
                        if (data.message) {
                            bootbox.alert(data.message);
                        }
                        $('.js-uploader').removeClass('uploading');
                    });
                });
            });
        </script>
        );
}