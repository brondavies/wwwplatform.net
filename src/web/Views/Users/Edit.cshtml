@using wwwplatform.Extensions.Helpers.Bootstrap;

@model wwwplatform.Models.ViewModels.UserEditorModel

@{
    ViewBag.Title = "Edit User - " + Model.FullName();
    var columns = new[] { new { sm = 3 }, new { sm = 9 } };
    var labelAttributes = new { @class = "control-label" };
    var label = new { @class = "control-label" };
    var boot_switch = new { htmlAttributes = new { @class = "bootstrap-switch" } };
    var yes_no = new { htmlAttributes = new { @class = "bootstrap-switch yes-no" } };
}

<h2>Edit User</h2>

@using (Html.BeginForm())
{
    @SimpleAntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.Row(columns.Reverse()
        ).Column(
        ).Add(
        @<h4 class="no-margin">
            @Model.FullName()
            <span>(@Model.UserName)</span>
        </h4>
        ).Column(htmlAttributes: new { @class = "text-right" }
        ).Add(@<span>
            <input type="submit" value="Save" class="btn btn-default" />        
            @Html.ActionLink("Cancel", "Index")
            </span>
        )
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.ConfirmPassword)

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.FirstName)
        ).Column().Add(
            Html.FormControlFor(model => model.FirstName)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.LastName)
        ).Column().Add(
            Html.FormControlFor(model => model.LastName)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.Email)
        ).Column().Add(
            Html.FormControlFor(model => model.Email)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.EmailConfirmed)
        ).Column().Add(
            Html.FormControlFor(model => model.EmailConfirmed, yes_no)
        )
        
        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.PhoneNumber)
        ).Column().Add(
            Html.FormControlFor(model => model.PhoneNumber)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.PhoneNumberConfirmed)
        ).Column().Add(
            Html.FormControlFor(model => model.PhoneNumberConfirmed, yes_no)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.TwoFactorEnabled)
        ).Column().Add(
            Html.FormControlFor(model => model.TwoFactorEnabled, boot_switch)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.LockoutEnabled)
        ).Column().Add(
            Html.FormControlFor(model => model.LockoutEnabled, yes_no)
        )
        
        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.LabelFor(model => model.LockoutEndDateUtc)
        ).Column().Add(
            Html.FormControlFor(model => model.LockoutEndDateUtc)
        )

        @Html.FormGroup(columns
        ).Column(null, label).Add(
            Html.Label("Roles")
        ).Column().Add(
            @<div class="btn-group" data-toggle="buttons">
                @RoleButtonGroup(Model.permissions, false)
            </div>
        )
    </div>
}
